       PROGRAM ASTAP
C
       PARAMETER(MXNODE= 20000, MXCOND= 100000, MXUARY=  5000)
       PARAMETER(MXTARY=  10000,MXMODS= 100,  MXTOKN=  80)
       PARAMETER(MXCNTR=  76,MXUCON= 1000,  MXNCON= 5000)
       PARAMETER(MXFRES= 196,MXFILE=  17)
       PARAMETER(MXFLID=  30,MXMODF= 100)
        COMMON /FLUDAT/ FI(90),FDATA(1700)
        COMMON /FLUARY/ NFPARY,FPARAY(      156)
        INTEGER FI
       PARAMETER (MXFMOD=        8)
       PARAMETER (MXLUMP=      244)
       PARAMETER (MXTANK=      102)
       PARAMETER (MXJUNC=      118)
       PARAMETER (MXPLEN=       24)
       PARAMETER (MXPATH=      236)
       PARAMETER (MXTUBE=      106)
       PARAMETER (MXCONN=      130)
       PARAMETER (KCMAX=      496)
       PARAMETER (NDMAX=      440)
       PARAMETER (NOMAX=       62)
       PARAMETER (NIA=      896)
       PARAMETER (NJA=     7040)
       PARAMETER (NARO=      124)
       PARAMETER (NWORKT=    38900)
       PARAMETER (MXTIE =       88)
       PARAMETER (MXMACS=       24)
       PARAMETER (MXGNLU=      204)
       PARAMETER (MXGNCN=      212)
       PARAMETER (MXGNTI=       88)
        COMMON/LUMP1 / LTYPE(MXLUMP)
        COMMON/LUMP2 / LINKL(MXPATH*2)
        COMMON/LUMP2A/ LNKPT(MXPATH*2)
        COMMON/LUMP3 / NLINKL(MXLUMP)
        COMMON/LUMP4 / HL(MXLUMP)
        COMMON/LUMP5 / PL(MXLUMP)
        COMMON/LUMP6 / XL(MXLUMP)
        COMMON/LUMP6A/ XSHIFT(MXLUMP)
        COMMON/LUMP7 / TL(MXLUMP)
        COMMON/LUMP7A/ DL(MXLUMP)
        COMMON/LUMP8 / UTANK(MXTANK)
        COMMON/LUMP9 / EMTANK(MXTANK)
        COMMON/LUMP10/ VOL(MXTANK)
        COMMON/LUMP11/ VDOT(MXTANK)
        COMMON/LUMP12/ QDOT(MXLUMP)
        COMMON/LUMP13/ DUDT(MXTANK)
        COMMON/LUMP14/ DMDT(MXTANK)
        COMMON/LUMP15/ DHDUM(MXTANK)
        COMMON/LUMP16/ DHDMU(MXTANK)
        COMMON/LUMP17/ DPDUM(MXTANK)
        COMMON/LUMP18/ DPDMU(MXTANK)
        COMMON/LUMP19/ VDASHP(MXTANK)
        COMMON/LUMP20/ VDASHH(MXTANK)
        COMMON/LUMP21/ LMPINT(MXLUMP)
        COMMON/LUMP22/ PLOLD(MXLUMP) 
        COMMON/LUMP23/ TLOLD(MXLUMP)
        COMMON/LUMP24/ DLOLD(MXLUMP)
        COMMON/LUMP26/ DPUP(MXLUMP)
        COMMON/LUMP27/ DPDOWN(MXLUMP)
        COMMON/LUMP29/ LMPSTA(MXLUMP)
        COMMON/LUMP30/ COMP(MXTANK)
        COMMON/LUMP31/ CX(MXLUMP)
        COMMON/LUMP32/ CY(MXLUMP)
        COMMON/LUMP33/ CZ(MXLUMP)
        COMMON/LUMP34/ VDOTC(MXTANK)
        COMMON/LUMP35/ DLL(MXLUMP)
        COMMON/LUMP36/ DLV(MXLUMP)
        COMMON/LUMP37/ HFGL(MXLUMP)
        DOUBLE PRECISION PL,PLOLD
        DIMENSION DHDUP(1),DHDPU(1),DRDU(1),LHARD(1),DPEST(1)
     .             ,DTFACT(1)
        EQUIVALENCE (LHARD,DPDMU),(DHDUP,DHDUM),(DHDPU,DHDMU)
     +          ,(DRDU,DPDUM),(VDASHP,DPEST),(VDASHH,DTFACT)
        COMMON/PATH1 / KTYPE(MXPATH)
        COMMON/PATH2 / IJK(2,MXPATH)
        COMMON/PATH3 / FR(MXPATH)
        COMMON/PATH4 / HC(MXPATH)
        COMMON/PATH5 / FC(MXPATH)
        COMMON/PATH6 / AC(MXPATH)
        COMMON/PATH7 / GK(MXPATH)
        COMMON/PATH8 / CSUBK(MXPATH)
        COMMON/PATH9 / LVS(MXPATH)
        COMMON/PATH10/ HK(MXPATH)
        COMMON/PATH11/ ENTUPK(MXPATH)
        COMMON/PATH12/ DWDT(MXTUBE)
        COMMON/PATH13/ DH(MXPATH)
        COMMON/PATH14/ TLEN(MXPATH)
        COMMON/PATH15/ AF(MXPATH)
        COMMON/PATH16/ WRF(MXPATH)
        COMMON/PATH17/ UPF(MXPATH)
        COMMON/PATH18/ IPDC(MXPATH)
        COMMON/PATH19/ NDEVIC(MXPATH)
        COMMON/PATH20/ PATINT(MXPATH)
        COMMON/PATH21/ FROLD(MXPATH)
        COMMON/PATH22/ DPOLD(MXPATH)
        COMMON/PATH23/ DUPI(MXPATH)
        COMMON/PATH24/ DUPJ(MXPATH)
        COMMON/PATH25/ HCBF(MXTUBE)
        COMMON/PATH26/ FPOW(MXPATH)
        COMMON/PATH27/ IDT(MXPATH)
        COMMON/PATH28/ IREG(MXPATH)
        COMMON/PATH29/ JREG(MXPATH)
        COMMON/PATH30/ EI(MXPATH)
        COMMON/PATH31/ EJ(MXPATH)
        COMMON/PATH32/ DK(MXPATH)
        COMMON/PATH33/ FD(MXPATH)
        COMMON/PATH34/ FG(MXPATH)
        COMMON/PATH35/ AM(MXTUBE)
        COMMON/PATH36/ HIOLD(MXPATH)
        COMMON/PATH37/ HJOLD(MXPATH)
        COMMON/PATH38/ HKOLD(MXPATH)
        COMMON/PATH39/ DACFR(MXPATH)
        COMMON/PATH40/ AFTH(MXPATH)
        COMMON/PATH41/ FK(MXPATH)
        INTEGER PATINT
        COMMON/SOLN1 / ACOEFF(KCMAX)
        COMMON/SOLN2 / BCONST(NOMAX)
        COMMON/SOLN3 / DELSOL(NDMAX)
        COMMON/SOLN4 / IACOEF(NIA)
        COMMON/SOLN5 / JACOEF(NJA)
        COMMON/SOLN6 / AROWS1(NOMAX)
        COMMON/SOLN6A/ AROWS2(NOMAX)
        COMMON/SOLN7 / IOR(NOMAX)
        COMMON/SOLN8 / DWORK(NWORKT)
        COMMON/SOLN9 / MWORK(2,MXFMOD)
        COMMON/SOLN12/ SOLT(MXFMOD)
        COMMON/SOLN15/ FLIP(MXFMOD)
        COMMON/SOLN17/ NUMHT(MXFMOD)
        COMMON/SOLN18/ NORDER(MXFMOD)
        COMMON/SOLN19/ NORD0(MXFMOD)
        COMMON/SOLN20/ LIMTNK(MXFMOD)
        COMMON/SOLN21/ LIMTUB(MXFMOD)
        COMMON/SOLN22/ KC(MXFMOD)
        COMMON/SOLN23/ NACOEF,NICOEF,NJCOEF,DELTAT(MXFMOD)
        COMMON/SOLN24/ NWORK(MXFMOD)
        COMMON/SOLN25/ DTIMEF(MXFMOD)
        COMMON/SOLN26/ LIMMES(MXFMOD)
        COMMON/SOLN27/ SSCMES(MXFMOD)
        COMMON/SOLN28/ LSTMES(MXFMOD)
        CHARACTER*32 LIMMES
        CHARACTER*60 LSTMES
        CHARACTER*100 SSCMES
        DOUBLE PRECISION ACOEFF,DELSOL,AROWS1,AROWS2,DWORK,BCONST
        DIMENSION IWORK(1)
        EQUIVALENCE (DWORK,IWORK)
        LOGICAL FLIP
        COMMON/FSIZ1 / NFM,NTL,NTT,NTJ,NTPL,NTK,NTTB,NTC
        COMMON/FSIZ2 / NUMTNK(MXFMOD)
        COMMON/FSIZ3 / NUMJNC(MXFMOD)
        COMMON/FSIZ4 / NUMPLE(MXFMOD)
        COMMON/FSIZ5 / NUMTUB(MXFMOD)
        COMMON/FSIZ6 / NUMCNT(MXFMOD)
        COMMON/FSIZ7 / NTOTL(MXFMOD)
        COMMON/FSIZ8 / NTOTK(MXFMOD)
        COMMON/FSIZ9 / MAXPTH(MXFMOD)
        COMMON/FSIZ11/ FLID(MXFMOD)
        INTEGER FLID
       PARAMETER (MXCLIS=        7)
       PARAMETER (MXRESN=      616)
        COMMON /HSHDT/ NTIM0
        COMMON /HSHDT1/ NTIMUP(MXRESN)
        COMMON /HSHDT2/ NTIMDN(MXRESN)
        COMMON /HSHDT3/ KEYS(2,MXRESN)
        COMMON /HSHDT4/ HSHDAT(MXCLIS,     1901)
        COMMON /HSHDT5/ PLNAMS(MXRESN)
        COMMON /HSHDT6/ DELTMX,MXRSON,MXPRIM,NXTHSH,DATA(5,MXRESN)
        COMMON /HSHDT7/ ROWSTK(MXRESN)
        COMMON /HSHDT8/ ONSTK
        INTEGER HSHDAT,ROWSTK,ONSTK
       CHARACTER*4 PLNAMS
       COMMON/FLUCNT/DTSIZF(MXMODF),DTMAXF(MXMODF),OUTPTF(MXMODF),
     . RSSIZF(MXMODF) ,RSMAXF(MXMODF) ,RERRF(MXMODF),
     . REBALF(MXMODF) ,ITROTF(MXMODF) ,OPITRF(MXMODF),
     . DTMINF(MXMODF) ,ITHLDF(MXMODF),
     . DTTUBF(MXMODF) ,RSTUBF(MXMODF)
        COMMON /FLUCN1/ PATMOS,UID,ACCELX,ACCELY,ACCELZ
        DOUBLE PRECISION PATMOS
        INTEGER UID,OPITRF
        COMMON /TIEDAT/ NTIET
        COMMON /TIEDA1/ PNTTIE(MXFMOD)
        COMMON /TIEDA2/ NUMTIE(MXFMOD)
        COMMON /TIEDA3/ LMPTIE(MXTIE)
        COMMON /TIEDA4/ TIETYP(MXTIE)
        COMMON /TIEDA5/ PATTIE(2,MXTIE)
        COMMON /TIEDA6/ AFRACT(2,MXTIE)
        COMMON /TIEDA7/ UA(MXTIE)
        COMMON /TIEDA8/ NODTIE(MXTIE)
        COMMON /TIEDA9/ PNGTIE(MXTIE)
        COMMON /TIEDAA/ TIEINT(MXTIE)
        COMMON /TIEDAB/ LNKTIL(MXLUMP+MXTIE)
        COMMON /TIEDAC/ LNKPTL(MXLUMP+MXTIE)
        COMMON /TIEDAD/ LNKTIN(       88+MXTIE)
        COMMON /TIEDAE/ LNKPTN(       88+MXTIE)
        COMMON /TIEDAF/ QTIE(MXTIE)
        COMMON /TIEDAG/ QTOLD(MXTIE)
        COMMON /TIEDAH/ QTOL2(MXTIE)
        COMMON /TIEDAI/ UAOLD(MXTIE)
        COMMON /TIEDAJ/ UAOL2(MXTIE)
        COMMON /TIEDAK/ NDTYPE(MXTIE)
        COMMON /TIEDAL/ GDNODE(MXTIE)
        COMMON /TIEDAM/ GDLUMP(MXTIE)
        COMMON /TIEDAN/ DUPL(MXTIE)
        COMMON /TIEDAO/ DUPN(MXTIE)
        COMMON /TIEDAP/ ROTTIN(       88)
        COMMON /TIEDAQ/ ROTTIL(MXLUMP)
        COMMON /TIEDAR/ UAFACT(MXTIE)
        LOGICAL GDNODE,GDLUMP
        INTEGER PNTTIE,PATTIE,TIETYP,PNGTIE,TIEINT,ROTTIN,ROTTIL
        COMMON / MACRO1 / MIDNOS(MXMACS)
        COMMON / MACRO2 / MININT(MXMACS)
        COMMON / MACRO3 / PNT1L(MXMACS)
        COMMON / MACRO4 / PNT1P(MXMACS)
        COMMON / MACRO5 / PNT1T(MXMACS)
        COMMON / MACRO6 / MLMPCT(MXMACS)
        COMMON / MACRO7 / MPTHCT(MXMACS)
        COMMON / MACRO8 / MTIECT(MXMACS)
        COMMON / MACRO9 / MLUMPS(MXGNLU)
        COMMON / MACROA / MPATHS(MXGNCN)
        COMMON / MACROB / MTIES(MXGNTI)
        COMMON / MACROC / TOTMAC,LASTMP,LASTML,LASTMT
        COMMON / MACROD / MACMOD(MXMACS)
        INTEGER PNT1L,PNT1P,PNT1T,TOTMAC,LASTML,LASTMP,LASTMT
        COMMON/JUNC1 / SKIP(MXJUNC)
        COMMON/JUNC2 / JEXTRA(MXJUNC)
        COMMON/JUNC3 / EPSK(       25,MXJUNC)
        COMMON/JUNC4 / LMP(       25,MXJUNC)
        COMMON/JUNC5 / NTIEJ(MXJUNC)
        LOGICAL SKIP
       COMMON /BLANK1/  NDIM1    , NTH1  , EXTRA1(MXNODE)
       COMMON /BLANK2/  NDIM2    , NTH2  , EXTRA2(MXNODE)
       COMMON /BLANK3/  NDIM3    , NTH3  , EXTRA3(MXNODE)
       COMMON /BLANK4/  NDIM4    , NTH4  , EXTRA4(MXNODE)
       COMMON /BLANK5/  NDIM5    , NTH5  , EXTRA5(MXNODE)
       COMMON /BLANK6/  NDIM6    , NTH6  , EXTRA6(MXNODE)
C
       COMMON /BLDAT  /   NSEQ(MXMODS)
       COMMON /BLDAT1 /   FIG
       CHARACTER*8        FIG
C
       COMMON /CCONST /   MMODS   , NNOD    , ABSZRO  , SIGMA
     +                  , NMACT   , DATE    , TIMDY   , LINECT
     +                  , PAGECT  , DTIMES  , TIMEN   , TIMEO
     +                  , TIMEM   , TIMEND  , NLOOPS  , LOOPCT
     +                  , MLINE
       INTEGER            LINECT  , PAGECT
C
       COMMON /DIMENS /   NND     , NNA     , NNH     , NNT
     +                  , NGT     , NCON    , NARYP   , NSEQU
     +                  , NSEQB   , NVC     , NVG
C
       COMMON /HEAD   /   NVRSN   , LMDTE   , NDTE    , NTME
     +                  , NJOB    , MDLNNM  , NTITLE  , ITITLE
       CHARACTER*6        NVRSN   , LMDTE   , NDTE    , NTME
       CHARACTER*8        NJOB    , MDLNNM
       CHARACTER*66       NTITLE  , ITITLE
C
       COMMON /TAPES  /   NIN     , NOUT    , NCOND   , NNODE
     +                  , NOSORC  , NOARRY  , NOCARY  , NOTARY
     +                  , NVCD    , NVGD    , NOUSER  , NOCNTR
     +                  , NOUSE   , NETQF   , NXTRA1  , NXTRA2
     +                  , NTSV    , NUSER1  , NUSER2  , NRSI  
     +                  , NRSO    , NPARAM  , NFLOW   , NFLOW2
     +                  , NFLOW3  , NOOPT   , NSCR1   , NSCR2 
     +                  , NSCR3   , NSCR4   , NQMP    , NFPROP
C
       COMMON /BEGEND /   IBEGC(MXMODS) , IENDC(MXMODS)
     +                  , IBEGG(MXMODS) , IENDG(MXMODS)
C
       COMMON /USER/  USRDAT(      30)
       COMMON /CNTRL1 /
     +       DTIMEU(MXMODS) , DTIMEI(MXMODS) , DTIMEL(MXMODS)
     +     , DTIMEH(MXMODS) , OUTPUT(MXMODS) , DTMPCC(MXMODS)
     +     , DTMPCA(MXMODS) , NDTMPN(MXMODS) , ITHOLD(MXMODS)
     +     , ATMPCA(MXMODS) , NATMPN(MXMODS) , DRLXCA(MXMODS)
     +     , NDRLXN(MXMODS) , ARLXCA(MXMODS) , ARLXCC(MXMODS)
     +     , NARLXN(MXMODS) , CSGMIN(MXMODS) , CSGFAC(MXMODS)
     +     , CSGMAX(MXMODS) , NCSGMN(MXMODS) , NCGMAN(MXMODS)
     +     , EBALSA(MXMODS) , EBALNA(MXMODS) , EBALSC(MXMODS)
     +     , EBALNC(MXMODS) , NEBALN(MXMODS) , NLOOPT(MXMODS)
     +     , EXTLIM(MXMODS) , ITERXT(MXMODS) , ITEROT(MXMODS)
     +     , BACKUP(MXMODS) , OPEITR(MXMODS) , DRLXCC(MXMODS)
     +     , ATMPCC(MXMODS) , ESUMIS(MXMODS) , ESUMOS(MXMODS)
       INTEGER            OPEITR
C
       COMMON /CNTRL2 /   NDTMPC(MXMODS) , NATMPC(MXMODS)
     +     , NDRLXC(MXMODS) , NARLXC(MXMODS) , NCSGMC(MXMODS)
     +     , NCGMAC(MXMODS) , NEBALC(MXMODS)
       CHARACTER*8        NDTMPC      , NATMPC
     +                  , NDRLXC      , NARLXC      , NCSGMC
     +                  , NCGMAC      , NEBALC
C
       COMMON /MODNM1 /   MNAMES(MXMODS)
       COMMON /MODNM2 /   MLLINK(MXMODS)
       COMMON /MODNM3 /   MRLINK(MXMODS)
       COMMON /MODNM4 /   MACT(MXMODS)
       COMMON /MODNM5 /   MROOT
       CHARACTER*8        MNAMES
C
       COMMON /TITL   /   TITLE
       CHARACTER*120      TITLE
C
       COMMON /NUMCON /   K(       1)
       COMMON /ARAYS  /   A(       1)
       COMMON /CARAYS /   UCA(       1)
       DIMENSION          XK(1)   , NA(1)
       CHARACTER*128 UCA
       EQUIVALENCE (XK(1), K(1))
       EQUIVALENCE (NA(1), A(1))
C
       COMMON /CDAT1  /   PT(     168)
       COMMON /CDAT2  /   PG(     168)
       COMMON /CDAT3  /   NLIN(      88)
       COMMON /CDAT4  /   NRAD(      88)
       COMMON /CDAT7  /   NCTOT(       4)
       COMMON /CDAT8  /   NGSTRT(       4)
       COMMON /CDAT9  /   G(      84)
       INTEGER            PT      , PG      , NLIN    , NRAD
       INTEGER            NCTOT   , NGSTRT
C
       COMMON /VARC   /   VC(       1)
C
       COMMON /VARG   /   VG(       1)
C
       COMMON /NDAT1  /   T(      88)
       COMMON /NDAT2  /   C(      88)
       COMMON /NDAT3  /   Q(      88)
       COMMON /NDAT4  /   NMOD(       4)
       COMMON /NDAT5  /   NSTRT(       4)
       COMMON /NDAT6  /   NMDIF(       4)
       COMMON /NDAT7  /   NMARI(       4)
       COMMON /NDAT8  /   NMHT(       4)
       COMMON /NDAT9  /   NMBD(       4)
       COMMON /NDAT10 /   NDNAM(      88)
       COMMON /NDAT11 /   NDINT(      88)
       COMMON /NDAT12 /   TOLD(      88)
       COMMON /NDAT13 /   QOLD(      88)
       CHARACTER*8        NMOD    ,NDNAM
C
       COMMON /DATQVT/ QVTDAT(8,       1)
       COMMON /MODQVT/ MODLQS(2,       4)
       COMMON /TARY1 / TARY(     1)
       COMMON /TARY2 / NUMREC(     4)
       COMMON /TARY3 / NPNT(2,     4)
       COMMON /TARY4 / NTREC(     4)
       COMMON /TARY5 / TIME1(     4)
       COMMON /TARY6 / TIMEH(     4)
       COMMON /TARY7 / TARYL(     1)
       COMMON /TARY8 / TIME1L(     4)
       COMMON /TARY9/ TIMEHL(     4)
        COMMON /SAVCPA/ HAVCPA
        COMMON /SAVCP1/ CPAFID(2,    1)
        COMMON /SAVCP2/ CPIARY(   33)
        INTEGER HAVCPA,CPAFID
        REAL CPIARY
       COMMON /FLONM1 /   FLONAM(MXFMOD)
       COMMON /FLONM2 /   FLLINK(MXFMOD)
       COMMON /FLONM3 /   FRLINK(MXFMOD)
       COMMON /FLONM4 /   RACT(MXFMOD)
       COMMON /FLONM5 /   THRPNT(MXFMOD)
       COMMON /FLONM6 /   FROOT,NUMFLM
       CHARACTER*8 FLONAM
       INTEGER FLLINK,FRLINK,RACT,THRPNT,FROOT,NUMFLM
       EXTERNAL BLKDAT
 
       include '../prepro/data.fi'
 
 
       projectpath1 = 'aquaduct'
 
       call params_default
       call filenames_default
 
        DATA HAVCPA /    1/
        DATA CPAFID / 9718,    1 /
       CALL INITAL
       CALL READIN
       CALL OPER
C
       call filenames_cleanup_prep
C
       call filenames_cleanup
C
       STOP
       END
       SUBROUTINE SOR001
        RETURN
        END
       SUBROUTINE SOR002
        RETURN
        END
       SUBROUTINE SOR003
        RETURN
        END
       SUBROUTINE SOR004
        RETURN
        END
       SUBROUTINE VA1001
       CALL QVTEMP('WALL5   ')
       CALL GVTEMP('WALL5   ')
       CALL CVTEMP('WALL5   ')
       RETURN
       END
       SUBROUTINE VA1002
       CALL QVTEMP('WALL6   ')
       CALL GVTEMP('WALL6   ')
       CALL CVTEMP('WALL6   ')
       RETURN
       END
       SUBROUTINE VA1003
       CALL QVTEMP('WALL7   ')
       CALL GVTEMP('WALL7   ')
       CALL CVTEMP('WALL7   ')
       RETURN
       END
       SUBROUTINE VA1004
       CALL QVTEMP('WALL8   ')
       CALL GVTEMP('WALL8   ')
       CALL CVTEMP('WALL8   ')
       RETURN
       END
       SUBROUTINE VA2001
       RETURN
       END
       SUBROUTINE VA2002
       RETURN
       END
       SUBROUTINE VA2003
       RETURN
       END
       SUBROUTINE VA2004
       RETURN
       END
       SUBROUTINE VA0001
       CALL QVTIME('WALL5   ')
       CALL GVTIME('WALL5   ')
!       CALL CVTIME('WALL5   ')
       RETURN
       END
       SUBROUTINE VA0002
       CALL QVTIME('WALL6   ')
       CALL GVTIME('WALL6   ')
!       CALL CVTIME('WALL6   ')
       RETURN
       END
       SUBROUTINE VA0003
       CALL QVTIME('WALL7   ')
       CALL GVTIME('WALL7   ')
!       CALL CVTIME('WALL7   ')
       RETURN
       END
       SUBROUTINE VA0004
       CALL QVTIME('WALL8   ')
       CALL GVTIME('WALL8   ')
!       CALL CVTIME('WALL8   ')
       RETURN
       END
       SUBROUTINE FL1001
       RETURN
       END
       SUBROUTINE FL1002
       RETURN
       END
       SUBROUTINE FL1003
       RETURN
       END
       SUBROUTINE FL1004
       RETURN
       END
       SUBROUTINE FL1005
       RETURN
       END
       SUBROUTINE FL1006
       RETURN
       END
       SUBROUTINE FL1007
       RETURN
       END
       SUBROUTINE FL1008
       RETURN
       END
       SUBROUTINE FL2001
       PARAMETER(MXNODE= 20000, MXCOND= 100000, MXUARY=  5000)
       PARAMETER(MXTARY=  10000,MXMODS=100,  MXTOKN=80)
       PARAMETER(MXCNTR=76,MXUCON= 1000,  MXNCON= 5000)
       PARAMETER(MXFRES=196,MXFILE=17,  MXFLID= 30)
       PARAMETER(MXMODF=100)
        COMMON /FLUDAT/ FI(90),FDATA(1700)
        INTEGER FI
        DOUBLE PRECISION VPS,VPGMAX
       PARAMETER (MXFMOD=        8)
       PARAMETER (MXLUMP=      244)
       PARAMETER (MXTANK=      102)
       PARAMETER (MXJUNC=      118)
       PARAMETER (MXPLEN=       24)
       PARAMETER (MXPATH=      236)
       PARAMETER (MXTUBE=      106)
       PARAMETER (MXCONN=      130)
       PARAMETER (KCMAX=      496)
       PARAMETER (NDMAX=      440)
       PARAMETER (NOMAX=       62)
       PARAMETER (NIA=      896)
       PARAMETER (NJA=     7040)
       PARAMETER (NARO=      124)
       PARAMETER (NWORKT=    38900)
       PARAMETER (MXTIE =       88)
       PARAMETER (MXMACS=       24)
       PARAMETER (MXGNLU=      204)
       PARAMETER (MXGNCN=      212)
       PARAMETER (MXGNTI=       88)
        COMMON/LUMP4 / HL(MXLUMP)
        COMMON/LUMP5 / PL(MXLUMP)
        COMMON/LUMP6 / XL(MXLUMP)
        COMMON/LUMP7 / TL(MXLUMP)
        COMMON/LUMP7A/ DL(MXLUMP)
        COMMON/LUMP10/ VOL(MXTANK)
        COMMON/LUMP11/ VDOT(MXTANK)
        COMMON/LUMP12/ QDOT(MXLUMP)
        DOUBLE PRECISION PL
        COMMON/LUMP30/ COMP(MXTANK)
        COMMON/LUMP31/ CX(MXLUMP)
        COMMON/LUMP32/ CY(MXLUMP)
        COMMON/LUMP33/ CZ(MXLUMP)
        COMMON /TIEDAF/ QTIE(MXTIE)
        COMMON /TIEDAN/ DUPL(MXTIE)
        COMMON /TIEDAO/ DUPN(MXTIE)
        COMMON /TIEDA7/ UA(MXTIE)
        COMMON/PATH3 / FR(MXPATH)
        COMMON/PATH4 / HC(MXPATH)
        COMMON/PATH5 / FC(MXPATH)
        COMMON/PATH6 / AC(MXPATH)
        COMMON/PATH7 / GK(MXPATH)
        COMMON/PATH10/ HK(MXPATH)
        COMMON/PATH13/ DH(MXPATH)
        COMMON/PATH14/ TLEN(MXPATH)
        COMMON/PATH15/ AF(MXPATH)
        COMMON/PATH16/ WRF(MXPATH)
        COMMON/PATH17/ UPF(MXPATH)
        COMMON/PATH18/ IPDC(MXPATH)
        COMMON/PATH23/ DUPI(MXPATH)
        COMMON/PATH24/ DUPJ(MXPATH)
        COMMON/PATH26/ FPOW(MXPATH)
        COMMON/PATH30/ EI(MXPATH)
        COMMON/PATH31/ EJ(MXPATH)
        COMMON/PATH32/ DK(MXPATH)
        COMMON/PATH33/ FD(MXPATH)
        COMMON/PATH34/ FG(MXPATH)
        COMMON/PATH35/ AM(MXTUBE)
        COMMON/PATH40/ AFTH(MXPATH)
        COMMON/PATH41/ FK(MXPATH)
        COMMON/SOLN23/ NZZZZ1,NZZZZ2,NZZZZ3,DTIMUF(MXFMOD)
        COMMON/FSIZ1 / NFM,NTL,NTT,NTJ,NTPL,NTK,NTTB,NTC
        COMMON/FSIZ2 / NUMTNK(MXFMOD)
        COMMON/FSIZ3 / NUMJNC(MXFMOD)
        COMMON/FSIZ4 / NUMPLE(MXFMOD)
        COMMON/FSIZ5 / NUMTUB(MXFMOD)
        COMMON/FSIZ6 / NUMCNT(MXFMOD)
        COMMON/FSIZ7 / NTOTL(MXFMOD)
        COMMON/FSIZ8 / NTOTK(MXFMOD)
        COMMON/FSIZ11/ FLID(MXFMOD)
        INTEGER FLID
        COMMON/FLUCNT/DTSIZF(MXMODF),DTMAXF(MXMODF),OUTPTF(MXMODF),
     . RSSIZF(MXMODF) ,RSMAXF(MXMODF) ,RERRF(MXMODF),
     . REBALF(MXMODF) ,ITROTF(MXMODF) ,OPITRF(MXMODF),
     . DTMINF(MXMODF) ,ITHLDF(MXMODF),
     . DTTUBF(MXMODF) ,RSTUBF(MXMODF)
        COMMON /FLUCN1/ PATMOS,UID,ACCELX,ACCELY,ACCELZ
        DOUBLE PRECISION PATMOS
        INTEGER UID
       COMMON /CNTRL1 /
     +       DTIMEU(MXMODS) , DTIMEI(MXMODS) , DTIMEL(MXMODS)
     +     , DTIMEH(MXMODS) , OUTPUT(MXMODS) , DTMPCC(MXMODS)
     +     , DTMPCA(MXMODS) , NDTMPN(MXMODS) , ITHOLD(MXMODS)
     +     , ATMPCA(MXMODS) , NATMPN(MXMODS) , DRLXCA(MXMODS)
     +     , NDRLXN(MXMODS) , ARLXCA(MXMODS) , ARLXCC(MXMODS)
     +     , NARLXN(MXMODS) , CSGMIN(MXMODS) , CSGFAC(MXMODS)
     +     , CSGMAX(MXMODS) , NCSGMN(MXMODS) , NCGMAN(MXMODS)
     +     , EBALSA(MXMODS) , EBALNA(MXMODS) , EBALSC(MXMODS)
     +     , EBALNC(MXMODS) , NEBALN(MXMODS) , NLOOPT(MXMODS)
     +     , EXTLIM(MXMODS) , ITERXT(MXMODS) , ITEROT(MXMODS)
     +     , BACKUP(MXMODS) , OPEITR(MXMODS) , DRLXCC(MXMODS)
     +     , ATMPCC(MXMODS) , ESUMIS(MXMODS) , ESUMOS(MXMODS)
       INTEGER            OPEITR
C
       COMMON /CNTRL2 /   NDTMPC(MXMODS) , NATMPC(MXMODS)
     +     , NDRLXC(MXMODS) , NARLXC(MXMODS) , NCSGMC(MXMODS)
     +     , NCGMAC(MXMODS) , NEBALC(MXMODS)
       CHARACTER*8        NDTMPC      , NATMPC
     +                  , NDRLXC      , NARLXC      , NCSGMC
     +                  , NCGMAC      , NEBALC
C
       COMMON /NDAT1  /   T(      88)
       COMMON /NDAT2  /   C(      88)
       COMMON /NDAT3  /   Q(      88)
       COMMON /NDAT4  /   NMOD(       4)
       COMMON /NDAT5  /   NSTRT(       4)
       COMMON /NDAT6  /   NMDIF(       4)
       COMMON /NDAT7  /   NMARI(       4)
       COMMON /NDAT8  /   NMHT(       4)
       COMMON /NDAT9  /   NMBD(       4)
       COMMON /NDAT10 /   NDNAM(      88)
       COMMON /NDAT11 /   NDINT(      88)
       COMMON /NDAT12 /   TOLD(      88)
       CHARACTER*8        NMOD    ,NDNAM
        COMMON /TAPES  /   NIN    ,NOUT   ,NCOND  ,NNODE
     +                ,NOSORC ,NOARRY ,NOCARY ,NOTARY
     +                ,NVCD   ,NVGD   ,NOUSER ,NOCNTR
     +                ,NOUSE  ,NETQF  ,NXTRA1 ,NXTRA2
     +                ,NTSV   ,NUSER1 ,NUSER2 ,NRSI
     +                ,NRSO   ,NPARAM ,NFLOW  ,NFLOW2
     +                ,NFLOW3 ,NOOPT  ,NSCR1  ,NSCR2
     +                ,NSCR3  ,NSCR4  ,NQMP   ,NFPROP
       COMMON /CDAT1  /   PT(     168)
       COMMON /CDAT2  /   PG(     168)
       COMMON /CDAT3  /   NLIN(      88)
       COMMON /CDAT4  /   NRAD(      88)
       COMMON /CDAT5  /   NFLO(      13)
       COMMON /CDAT7  /   NCTOT(       4)
       COMMON /CDAT8  /   NGSTRT(       4)
       COMMON /CDAT9  /   G(      84)
       INTEGER            PT      , PG      , NLIN    , NRAD
       INTEGER            NCTOT   , NGSTRT
            COMMON /CCONST /   MMODS  ,NNOD   ,ABSZRO ,SIGMA  ,NMACT
     +                  ,DATE   ,TIMDY  ,LINECT ,PAGECT ,DTIMES
     +                  ,TIMEN  ,TIMEO  ,TIMEM  ,TIMEND ,NLOOPS
     +                  ,LOOPCT ,MLINE
        INTEGER LINECT,PAGECT
        COMMON /NUMCON /   K(       1)
       COMMON /ARAYS  /   A(       1)
       COMMON /CARAYS /   UCA(       1)
       DIMENSION          XK(1)   , NA(1)
       CHARACTER*128 UCA
       EQUIVALENCE (K(1), XK(1))
       EQUIVALENCE (A(1), NA(1))
      COMMON/USER/ ATEST,BTEST,CTEST,DTEST,ETEST,FTEST,GTEST,HTEST,ITEST
     +,JTEST,KTEST,LTEST,MTEST,NTEST,OTEST,PTEST,QTEST,RTEST,STEST,TTEST
     +,UTEST,VTEST,WTEST,XTEST,YTEST,ZTEST,NREC,ITRAN,TINLET,I
       EXTERNAL CTF,CTK,FTC,FTK,FTR,KTC,KTF,RTF
       EXTERNAL TPRINT,QPRINT,CPRINT,GPRINT
       COMMON /SOLTYP/ NSOL
        IF ( ITRAN .EQ. 1 ) THEN
        OUTPTF  (  1) = 60.000000
        IF ( TL(   201) .LE. 5.0000000 ) TIMEND = MAX ( TIMEN ,
     . 600.00000  )
        ELSEIF ( ITRAN .EQ. 2 ) THEN
        OUTPTF  (  1) = 1000.0000
        OPITRF  (  1) = 1.0000000
        IF ( DTIMUF  (  6) .GT. 1.0000000 ) TIMEND = TIMEN
        ENDIF
        CALL DDUMP( 0.10000000 , ' ' , ' ' , 'AQUADUCT.HIS' )
       RETURN
       END
       SUBROUTINE FL2002
       RETURN
       END
       SUBROUTINE FL2003
       RETURN
       END
       SUBROUTINE FL2004
       RETURN
       END
       SUBROUTINE FL2005
       RETURN
       END
       SUBROUTINE FL2006
       RETURN
       END
       SUBROUTINE FL2007
       RETURN
       END
       SUBROUTINE FL2008
       RETURN
       END
       SUBROUTINE FL0001
       PARAMETER(MXNODE= 20000, MXCOND= 100000, MXUARY=  5000)
       PARAMETER(MXTARY=  10000,MXMODS=100,  MXTOKN=80)
       PARAMETER(MXCNTR=76,MXUCON= 1000,  MXNCON= 5000)
       PARAMETER(MXFRES=196,MXFILE=17,  MXFLID= 30)
       PARAMETER(MXMODF=100)
        COMMON /FLUDAT/ FI(90),FDATA(1700)
        INTEGER FI
        DOUBLE PRECISION VPS,VPGMAX
       PARAMETER (MXFMOD=        8)
       PARAMETER (MXLUMP=      244)
       PARAMETER (MXTANK=      102)
       PARAMETER (MXJUNC=      118)
       PARAMETER (MXPLEN=       24)
       PARAMETER (MXPATH=      236)
       PARAMETER (MXTUBE=      106)
       PARAMETER (MXCONN=      130)
       PARAMETER (KCMAX=      496)
       PARAMETER (NDMAX=      440)
       PARAMETER (NOMAX=       62)
       PARAMETER (NIA=      896)
       PARAMETER (NJA=     7040)
       PARAMETER (NARO=      124)
       PARAMETER (NWORKT=    38900)
       PARAMETER (MXTIE =       88)
       PARAMETER (MXMACS=       24)
       PARAMETER (MXGNLU=      204)
       PARAMETER (MXGNCN=      212)
       PARAMETER (MXGNTI=       88)
        COMMON/LUMP4 / HL(MXLUMP)
        COMMON/LUMP5 / PL(MXLUMP)
        COMMON/LUMP6 / XL(MXLUMP)
        COMMON/LUMP7 / TL(MXLUMP)
        COMMON/LUMP7A/ DL(MXLUMP)
        COMMON/LUMP10/ VOL(MXTANK)
        COMMON/LUMP11/ VDOT(MXTANK)
        COMMON/LUMP12/ QDOT(MXLUMP)
        DOUBLE PRECISION PL
        COMMON/LUMP30/ COMP(MXTANK)
        COMMON/LUMP31/ CX(MXLUMP)
        COMMON/LUMP32/ CY(MXLUMP)
        COMMON/LUMP33/ CZ(MXLUMP)
        COMMON /TIEDAF/ QTIE(MXTIE)
        COMMON /TIEDAN/ DUPL(MXTIE)
        COMMON /TIEDAO/ DUPN(MXTIE)
        COMMON /TIEDA7/ UA(MXTIE)
        COMMON/PATH3 / FR(MXPATH)
        COMMON/PATH4 / HC(MXPATH)
        COMMON/PATH5 / FC(MXPATH)
        COMMON/PATH6 / AC(MXPATH)
        COMMON/PATH7 / GK(MXPATH)
        COMMON/PATH10/ HK(MXPATH)
        COMMON/PATH13/ DH(MXPATH)
        COMMON/PATH14/ TLEN(MXPATH)
        COMMON/PATH15/ AF(MXPATH)
        COMMON/PATH16/ WRF(MXPATH)
        COMMON/PATH17/ UPF(MXPATH)
        COMMON/PATH18/ IPDC(MXPATH)
        COMMON/PATH23/ DUPI(MXPATH)
        COMMON/PATH24/ DUPJ(MXPATH)
        COMMON/PATH26/ FPOW(MXPATH)
        COMMON/PATH30/ EI(MXPATH)
        COMMON/PATH31/ EJ(MXPATH)
        COMMON/PATH32/ DK(MXPATH)
        COMMON/PATH33/ FD(MXPATH)
        COMMON/PATH34/ FG(MXPATH)
        COMMON/PATH35/ AM(MXTUBE)
        COMMON/PATH40/ AFTH(MXPATH)
        COMMON/PATH41/ FK(MXPATH)
        COMMON/SOLN23/ NZZZZ1,NZZZZ2,NZZZZ3,DTIMUF(MXFMOD)
        COMMON/FSIZ1 / NFM,NTL,NTT,NTJ,NTPL,NTK,NTTB,NTC
        COMMON/FSIZ2 / NUMTNK(MXFMOD)
        COMMON/FSIZ3 / NUMJNC(MXFMOD)
        COMMON/FSIZ4 / NUMPLE(MXFMOD)
        COMMON/FSIZ5 / NUMTUB(MXFMOD)
        COMMON/FSIZ6 / NUMCNT(MXFMOD)
        COMMON/FSIZ7 / NTOTL(MXFMOD)
        COMMON/FSIZ8 / NTOTK(MXFMOD)
        COMMON/FSIZ11/ FLID(MXFMOD)
        INTEGER FLID
        COMMON/FLUCNT/DTSIZF(MXMODF),DTMAXF(MXMODF),OUTPTF(MXMODF),
     . RSSIZF(MXMODF) ,RSMAXF(MXMODF) ,RERRF(MXMODF),
     . REBALF(MXMODF) ,ITROTF(MXMODF) ,OPITRF(MXMODF),
     . DTMINF(MXMODF) ,ITHLDF(MXMODF),
     . DTTUBF(MXMODF) ,RSTUBF(MXMODF)
        COMMON /FLUCN1/ PATMOS,UID,ACCELX,ACCELY,ACCELZ
        DOUBLE PRECISION PATMOS
        INTEGER UID
       COMMON /CNTRL1 /
     +       DTIMEU(MXMODS) , DTIMEI(MXMODS) , DTIMEL(MXMODS)
     +     , DTIMEH(MXMODS) , OUTPUT(MXMODS) , DTMPCC(MXMODS)
     +     , DTMPCA(MXMODS) , NDTMPN(MXMODS) , ITHOLD(MXMODS)
     +     , ATMPCA(MXMODS) , NATMPN(MXMODS) , DRLXCA(MXMODS)
     +     , NDRLXN(MXMODS) , ARLXCA(MXMODS) , ARLXCC(MXMODS)
     +     , NARLXN(MXMODS) , CSGMIN(MXMODS) , CSGFAC(MXMODS)
     +     , CSGMAX(MXMODS) , NCSGMN(MXMODS) , NCGMAN(MXMODS)
     +     , EBALSA(MXMODS) , EBALNA(MXMODS) , EBALSC(MXMODS)
     +     , EBALNC(MXMODS) , NEBALN(MXMODS) , NLOOPT(MXMODS)
     +     , EXTLIM(MXMODS) , ITERXT(MXMODS) , ITEROT(MXMODS)
     +     , BACKUP(MXMODS) , OPEITR(MXMODS) , DRLXCC(MXMODS)
     +     , ATMPCC(MXMODS) , ESUMIS(MXMODS) , ESUMOS(MXMODS)
       INTEGER            OPEITR
C
       COMMON /CNTRL2 /   NDTMPC(MXMODS) , NATMPC(MXMODS)
     +     , NDRLXC(MXMODS) , NARLXC(MXMODS) , NCSGMC(MXMODS)
     +     , NCGMAC(MXMODS) , NEBALC(MXMODS)
       CHARACTER*8        NDTMPC      , NATMPC
     +                  , NDRLXC      , NARLXC      , NCSGMC
     +                  , NCGMAC      , NEBALC
C
       COMMON /NDAT1  /   T(      88)
       COMMON /NDAT2  /   C(      88)
       COMMON /NDAT3  /   Q(      88)
       COMMON /NDAT4  /   NMOD(       4)
       COMMON /NDAT5  /   NSTRT(       4)
       COMMON /NDAT6  /   NMDIF(       4)
       COMMON /NDAT7  /   NMARI(       4)
       COMMON /NDAT8  /   NMHT(       4)
       COMMON /NDAT9  /   NMBD(       4)
       COMMON /NDAT10 /   NDNAM(      88)
       COMMON /NDAT11 /   NDINT(      88)
       COMMON /NDAT12 /   TOLD(      88)
       CHARACTER*8        NMOD    ,NDNAM
        COMMON /TAPES  /   NIN    ,NOUT   ,NCOND  ,NNODE
     +                ,NOSORC ,NOARRY ,NOCARY ,NOTARY
     +                ,NVCD   ,NVGD   ,NOUSER ,NOCNTR
     +                ,NOUSE  ,NETQF  ,NXTRA1 ,NXTRA2
     +                ,NTSV   ,NUSER1 ,NUSER2 ,NRSI
     +                ,NRSO   ,NPARAM ,NFLOW  ,NFLOW2
     +                ,NFLOW3 ,NOOPT  ,NSCR1  ,NSCR2
     +                ,NSCR3  ,NSCR4  ,NQMP   ,NFPROP
       COMMON /CDAT1  /   PT(     168)
       COMMON /CDAT2  /   PG(     168)
       COMMON /CDAT3  /   NLIN(      88)
       COMMON /CDAT4  /   NRAD(      88)
       COMMON /CDAT5  /   NFLO(      13)
       COMMON /CDAT7  /   NCTOT(       4)
       COMMON /CDAT8  /   NGSTRT(       4)
       COMMON /CDAT9  /   G(      84)
       INTEGER            PT      , PG      , NLIN    , NRAD
       INTEGER            NCTOT   , NGSTRT
            COMMON /CCONST /   MMODS  ,NNOD   ,ABSZRO ,SIGMA  ,NMACT
     +                  ,DATE   ,TIMDY  ,LINECT ,PAGECT ,DTIMES
     +                  ,TIMEN  ,TIMEO  ,TIMEM  ,TIMEND ,NLOOPS
     +                  ,LOOPCT ,MLINE
        INTEGER LINECT,PAGECT
        COMMON /NUMCON /   K(       1)
       COMMON /ARAYS  /   A(       1)
       COMMON /CARAYS /   UCA(       1)
       DIMENSION          XK(1)   , NA(1)
       CHARACTER*128 UCA
       EQUIVALENCE (K(1), XK(1))
       EQUIVALENCE (A(1), NA(1))
      COMMON/USER/ ATEST,BTEST,CTEST,DTEST,ETEST,FTEST,GTEST,HTEST,ITEST
     +,JTEST,KTEST,LTEST,MTEST,NTEST,OTEST,PTEST,QTEST,RTEST,STEST,TTEST
     +,UTEST,VTEST,WTEST,XTEST,YTEST,ZTEST,NREC,ITRAN,TINLET,I
       EXTERNAL CTF,CTK,FTC,FTK,FTR,KTC,KTF,RTF
       EXTERNAL TPRINT,QPRINT,CPRINT,GPRINT
       COMMON /SOLTYP/ NSOL
        IF ( ITRAN .EQ. 1 .AND. TIMEN .LE. 610.00000 ) THEN
        TINLET = MAX ( 1.0000000 , 20.000000 -19.000000 * TIMEN /
     . 600.00000  )
        CALL CHGLMP( 'PIPE1' , 1000 , 'TL' , TINLET , 'PL' )
        CALL CHGLMP( 'PIPE2' , 1000 , 'TL' , TINLET , 'PL' )
        CALL CHGLMP( 'PIPE3' , 1000 , 'TL' , TINLET , 'PL' )
        CALL CHGLMP( 'PIPE4' , 1000 , 'TL' , TINLET , 'PL' )
        CALL CHGLMP( 'PIPE5' , 1000 , 'TL' , TINLET , 'PL' )
        CALL CHGLMP( 'PIPE6' , 1000 , 'TL' , TINLET , 'PL' )
        CALL CHGLMP( 'PIPE7' , 1000 , 'TL' , TINLET , 'PL' )
        CALL CHGLMP( 'PIPE8' , 1000 , 'TL' , TINLET , 'PL' )
        ENDIF
       RETURN
       END
       SUBROUTINE FL0002
       RETURN
       END
       SUBROUTINE FL0003
       RETURN
       END
       SUBROUTINE FL0004
       RETURN
       END
       SUBROUTINE FL0005
       RETURN
       END
       SUBROUTINE FL0006
       RETURN
       END
       SUBROUTINE FL0007
       RETURN
       END
       SUBROUTINE FL0008
       RETURN
       END
       SUBROUTINE OPER
       PARAMETER(MXNODE= 20000, MXCOND= 100000, MXUARY=  5000)
       PARAMETER(MXTARY=  10000,MXMODS=100,  MXTOKN=80)
       PARAMETER(MXCNTR=76,MXUCON= 1000,  MXNCON= 5000)
       PARAMETER(MXFRES=196,MXFILE=17,  MXFLID= 30)
       PARAMETER(MXMODF=100)
        COMMON /FLUDAT/ FI(90),FDATA(1700)
        INTEGER FI
        DOUBLE PRECISION VPS,VPGMAX
       PARAMETER (MXFMOD=        8)
       PARAMETER (MXLUMP=      244)
       PARAMETER (MXTANK=      102)
       PARAMETER (MXJUNC=      118)
       PARAMETER (MXPLEN=       24)
       PARAMETER (MXPATH=      236)
       PARAMETER (MXTUBE=      106)
       PARAMETER (MXCONN=      130)
       PARAMETER (KCMAX=      496)
       PARAMETER (NDMAX=      440)
       PARAMETER (NOMAX=       62)
       PARAMETER (NIA=      896)
       PARAMETER (NJA=     7040)
       PARAMETER (NARO=      124)
       PARAMETER (NWORKT=    38900)
       PARAMETER (MXTIE =       88)
       PARAMETER (MXMACS=       24)
       PARAMETER (MXGNLU=      204)
       PARAMETER (MXGNCN=      212)
       PARAMETER (MXGNTI=       88)
        COMMON/LUMP4 / HL(MXLUMP)
        COMMON/LUMP5 / PL(MXLUMP)
        COMMON/LUMP6 / XL(MXLUMP)
        COMMON/LUMP7 / TL(MXLUMP)
        COMMON/LUMP7A/ DL(MXLUMP)
        COMMON/LUMP10/ VOL(MXTANK)
        COMMON/LUMP11/ VDOT(MXTANK)
        COMMON/LUMP12/ QDOT(MXLUMP)
        DOUBLE PRECISION PL
        COMMON/LUMP30/ COMP(MXTANK)
        COMMON/LUMP31/ CX(MXLUMP)
        COMMON/LUMP32/ CY(MXLUMP)
        COMMON/LUMP33/ CZ(MXLUMP)
        COMMON /TIEDAF/ QTIE(MXTIE)
        COMMON /TIEDAN/ DUPL(MXTIE)
        COMMON /TIEDAO/ DUPN(MXTIE)
        COMMON /TIEDA7/ UA(MXTIE)
        COMMON/PATH3 / FR(MXPATH)
        COMMON/PATH4 / HC(MXPATH)
        COMMON/PATH5 / FC(MXPATH)
        COMMON/PATH6 / AC(MXPATH)
        COMMON/PATH7 / GK(MXPATH)
        COMMON/PATH10/ HK(MXPATH)
        COMMON/PATH13/ DH(MXPATH)
        COMMON/PATH14/ TLEN(MXPATH)
        COMMON/PATH15/ AF(MXPATH)
        COMMON/PATH16/ WRF(MXPATH)
        COMMON/PATH17/ UPF(MXPATH)
        COMMON/PATH18/ IPDC(MXPATH)
        COMMON/PATH23/ DUPI(MXPATH)
        COMMON/PATH24/ DUPJ(MXPATH)
        COMMON/PATH26/ FPOW(MXPATH)
        COMMON/PATH30/ EI(MXPATH)
        COMMON/PATH31/ EJ(MXPATH)
        COMMON/PATH32/ DK(MXPATH)
        COMMON/PATH33/ FD(MXPATH)
        COMMON/PATH34/ FG(MXPATH)
        COMMON/PATH35/ AM(MXTUBE)
        COMMON/PATH40/ AFTH(MXPATH)
        COMMON/PATH41/ FK(MXPATH)
        COMMON/SOLN23/ NZZZZ1,NZZZZ2,NZZZZ3,DTIMUF(MXFMOD)
        COMMON/FSIZ1 / NFM,NTL,NTT,NTJ,NTPL,NTK,NTTB,NTC
        COMMON/FSIZ2 / NUMTNK(MXFMOD)
        COMMON/FSIZ3 / NUMJNC(MXFMOD)
        COMMON/FSIZ4 / NUMPLE(MXFMOD)
        COMMON/FSIZ5 / NUMTUB(MXFMOD)
        COMMON/FSIZ6 / NUMCNT(MXFMOD)
        COMMON/FSIZ7 / NTOTL(MXFMOD)
        COMMON/FSIZ8 / NTOTK(MXFMOD)
        COMMON/FSIZ11/ FLID(MXFMOD)
        INTEGER FLID
        COMMON/FLUCNT/DTSIZF(MXMODF),DTMAXF(MXMODF),OUTPTF(MXMODF),
     . RSSIZF(MXMODF) ,RSMAXF(MXMODF) ,RERRF(MXMODF),
     . REBALF(MXMODF) ,ITROTF(MXMODF) ,OPITRF(MXMODF),
     . DTMINF(MXMODF) ,ITHLDF(MXMODF),
     . DTTUBF(MXMODF) ,RSTUBF(MXMODF)
        COMMON /FLUCN1/ PATMOS,UID,ACCELX,ACCELY,ACCELZ
        DOUBLE PRECISION PATMOS
        INTEGER UID
       COMMON /CNTRL1 /
     +       DTIMEU(MXMODS) , DTIMEI(MXMODS) , DTIMEL(MXMODS)
     +     , DTIMEH(MXMODS) , OUTPUT(MXMODS) , DTMPCC(MXMODS)
     +     , DTMPCA(MXMODS) , NDTMPN(MXMODS) , ITHOLD(MXMODS)
     +     , ATMPCA(MXMODS) , NATMPN(MXMODS) , DRLXCA(MXMODS)
     +     , NDRLXN(MXMODS) , ARLXCA(MXMODS) , ARLXCC(MXMODS)
     +     , NARLXN(MXMODS) , CSGMIN(MXMODS) , CSGFAC(MXMODS)
     +     , CSGMAX(MXMODS) , NCSGMN(MXMODS) , NCGMAN(MXMODS)
     +     , EBALSA(MXMODS) , EBALNA(MXMODS) , EBALSC(MXMODS)
     +     , EBALNC(MXMODS) , NEBALN(MXMODS) , NLOOPT(MXMODS)
     +     , EXTLIM(MXMODS) , ITERXT(MXMODS) , ITEROT(MXMODS)
     +     , BACKUP(MXMODS) , OPEITR(MXMODS) , DRLXCC(MXMODS)
     +     , ATMPCC(MXMODS) , ESUMIS(MXMODS) , ESUMOS(MXMODS)
       INTEGER            OPEITR
C
       COMMON /CNTRL2 /   NDTMPC(MXMODS) , NATMPC(MXMODS)
     +     , NDRLXC(MXMODS) , NARLXC(MXMODS) , NCSGMC(MXMODS)
     +     , NCGMAC(MXMODS) , NEBALC(MXMODS)
       CHARACTER*8        NDTMPC      , NATMPC
     +                  , NDRLXC      , NARLXC      , NCSGMC
     +                  , NCGMAC      , NEBALC
C
       COMMON /NDAT1  /   T(      88)
       COMMON /NDAT2  /   C(      88)
       COMMON /NDAT3  /   Q(      88)
       COMMON /NDAT4  /   NMOD(       4)
       COMMON /NDAT5  /   NSTRT(       4)
       COMMON /NDAT6  /   NMDIF(       4)
       COMMON /NDAT7  /   NMARI(       4)
       COMMON /NDAT8  /   NMHT(       4)
       COMMON /NDAT9  /   NMBD(       4)
       COMMON /NDAT10 /   NDNAM(      88)
       COMMON /NDAT11 /   NDINT(      88)
       COMMON /NDAT12 /   TOLD(      88)
       CHARACTER*8        NMOD    ,NDNAM
        COMMON /TAPES  /   NIN    ,NOUT   ,NCOND  ,NNODE
     +                ,NOSORC ,NOARRY ,NOCARY ,NOTARY
     +                ,NVCD   ,NVGD   ,NOUSER ,NOCNTR
     +                ,NOUSE  ,NETQF  ,NXTRA1 ,NXTRA2
     +                ,NTSV   ,NUSER1 ,NUSER2 ,NRSI
     +                ,NRSO   ,NPARAM ,NFLOW  ,NFLOW2
     +                ,NFLOW3 ,NOOPT  ,NSCR1  ,NSCR2
     +                ,NSCR3  ,NSCR4  ,NQMP   ,NFPROP
       COMMON /CDAT1  /   PT(     168)
       COMMON /CDAT2  /   PG(     168)
       COMMON /CDAT3  /   NLIN(      88)
       COMMON /CDAT4  /   NRAD(      88)
       COMMON /CDAT5  /   NFLO(      13)
       COMMON /CDAT7  /   NCTOT(       4)
       COMMON /CDAT8  /   NGSTRT(       4)
       COMMON /CDAT9  /   G(      84)
       INTEGER            PT      , PG      , NLIN    , NRAD
       INTEGER            NCTOT   , NGSTRT
            COMMON /CCONST /   MMODS  ,NNOD   ,ABSZRO ,SIGMA  ,NMACT
     +                  ,DATE   ,TIMDY  ,LINECT ,PAGECT ,DTIMES
     +                  ,TIMEN  ,TIMEO  ,TIMEM  ,TIMEND ,NLOOPS
     +                  ,LOOPCT ,MLINE
        INTEGER LINECT,PAGECT
        COMMON /NUMCON /   K(       1)
       COMMON /ARAYS  /   A(       1)
       COMMON /CARAYS /   UCA(       1)
       DIMENSION          XK(1)   , NA(1)
       CHARACTER*128 UCA
       EQUIVALENCE (K(1), XK(1))
       EQUIVALENCE (A(1), NA(1))
      COMMON/USER/ ATEST,BTEST,CTEST,DTEST,ETEST,FTEST,GTEST,HTEST,ITEST
     +,JTEST,KTEST,LTEST,MTEST,NTEST,OTEST,PTEST,QTEST,RTEST,STEST,TTEST
     +,UTEST,VTEST,WTEST,XTEST,YTEST,ZTEST,NREC,ITRAN,TINLET,I
       EXTERNAL CTF,CTK,FTC,FTK,FTR,KTC,KTF,RTF
       EXTERNAL TPRINT,QPRINT,CPRINT,GPRINT
       COMMON /SOLTYP/ NSOL
       CHARACTER*8 NBNAM( 100)
       CHARACTER*8 NFNAM( 100)
       NBNAM(  1) = 'WALL5   '
       NBNAM(  2) = 'WALL6   '
       NBNAM(  3) = 'WALL7   '
       NBNAM(  4) = 'WALL8   '
       CALL BUILD ('AQUA    ',  4, NBNAM)
       NFNAM(  1) = 'PIPE1   '
       NFNAM(  2) = 'PIPE2   '
       NFNAM(  3) = 'PIPE3   '
       NFNAM(  4) = 'PIPE4   '
       NFNAM(  5) = 'PIPE5   '
       NFNAM(  6) = 'PIPE6   '
       NFNAM(  7) = 'PIPE7   '
       NFNAM(  8) = 'PIPE8   '
       CALL BUILDF('AQUA    ',  8, NFNAM)
        CALL FASTIC
        CALL STDSTL
        CALL SAVPAR( NREC )
        CALL LMPTAB( 'ALL' )
        CALL PTHTAB( 'ALL' )
        WRITE ( NUSER1 , 10 ) ( I , I = 1 , 8 )
10      FORMAT(' SNOWMELT TRANSIENT SUMMARY: OUTLET TEMPERATURE'//
     +   '   TIME (SEC)',T15,8(4X,'PIPE',I2,2X)/)
        ITRAN = 1
        TIMEND = 10000.000
        CALL FORWRD
        CALL LMPTAB( 'ALL' )
        CALL PTHTAB( 'ALL' )
        CALL TIETAB( 'ALL' )
        CALL TPRINT( 'ALL' )
        WRITE ( NUSER2 , 20 ) ( I , I = 1 , 8 )
20      FORMAT(' EARTHQUAKE TRANSIENT SUMMARY: OUTLET FLOWRATE'//
     +   '   TIME (SEC)',T15,8(4X,'PIPE',I2,2X)/)
        CALL RESPAR( NREC )
        ITRAN = 2
        TIMEO = 0.0000000
        FK(   109) = 1.0000000
        FK(   142) = 1.0000000
        FK(   145) = 1.0000000
        FK(   178) = 1.0000000
        FK(   181) = 1.0000000
        FK(   214) = 1.0000000
        FK(   217) = 1.0000000
        FK(   236) = 1.0000000
        TIMEND = 100.00000
        CALL FORWRD
        CALL LMPTAB( 'ALL' )
        CALL PTHTAB( 'ALL' )
        WRITE ( NUSER2 , 30 ) FR(   107) , FR(   109)
30	FORMAT(//' FINAL INLET FLOWRATE:',T30,1PG12.3/
     +		 ' FINAL LEAKAGE FLOWRATE:',T30,G12.3)
       RETURN
       END
       SUBROUTINE OUF001
       PARAMETER(MXNODE= 20000, MXCOND= 100000, MXUARY=  5000)
       PARAMETER(MXTARY=  10000,MXMODS=100,  MXTOKN=80)
       PARAMETER(MXCNTR=76,MXUCON= 1000,  MXNCON= 5000)
       PARAMETER(MXFRES=196,MXFILE=17,  MXFLID= 30)
       PARAMETER(MXMODF=100)
        COMMON /FLUDAT/ FI(90),FDATA(1700)
        INTEGER FI
        DOUBLE PRECISION VPS,VPGMAX
       PARAMETER (MXFMOD=        8)
       PARAMETER (MXLUMP=      244)
       PARAMETER (MXTANK=      102)
       PARAMETER (MXJUNC=      118)
       PARAMETER (MXPLEN=       24)
       PARAMETER (MXPATH=      236)
       PARAMETER (MXTUBE=      106)
       PARAMETER (MXCONN=      130)
       PARAMETER (KCMAX=      496)
       PARAMETER (NDMAX=      440)
       PARAMETER (NOMAX=       62)
       PARAMETER (NIA=      896)
       PARAMETER (NJA=     7040)
       PARAMETER (NARO=      124)
       PARAMETER (NWORKT=    38900)
       PARAMETER (MXTIE =       88)
       PARAMETER (MXMACS=       24)
       PARAMETER (MXGNLU=      204)
       PARAMETER (MXGNCN=      212)
       PARAMETER (MXGNTI=       88)
        COMMON/LUMP4 / HL(MXLUMP)
        COMMON/LUMP5 / PL(MXLUMP)
        COMMON/LUMP6 / XL(MXLUMP)
        COMMON/LUMP7 / TL(MXLUMP)
        COMMON/LUMP7A/ DL(MXLUMP)
        COMMON/LUMP10/ VOL(MXTANK)
        COMMON/LUMP11/ VDOT(MXTANK)
        COMMON/LUMP12/ QDOT(MXLUMP)
        DOUBLE PRECISION PL
        COMMON/LUMP30/ COMP(MXTANK)
        COMMON/LUMP31/ CX(MXLUMP)
        COMMON/LUMP32/ CY(MXLUMP)
        COMMON/LUMP33/ CZ(MXLUMP)
        COMMON /TIEDAF/ QTIE(MXTIE)
        COMMON /TIEDAN/ DUPL(MXTIE)
        COMMON /TIEDAO/ DUPN(MXTIE)
        COMMON /TIEDA7/ UA(MXTIE)
        COMMON/PATH3 / FR(MXPATH)
        COMMON/PATH4 / HC(MXPATH)
        COMMON/PATH5 / FC(MXPATH)
        COMMON/PATH6 / AC(MXPATH)
        COMMON/PATH7 / GK(MXPATH)
        COMMON/PATH10/ HK(MXPATH)
        COMMON/PATH13/ DH(MXPATH)
        COMMON/PATH14/ TLEN(MXPATH)
        COMMON/PATH15/ AF(MXPATH)
        COMMON/PATH16/ WRF(MXPATH)
        COMMON/PATH17/ UPF(MXPATH)
        COMMON/PATH18/ IPDC(MXPATH)
        COMMON/PATH23/ DUPI(MXPATH)
        COMMON/PATH24/ DUPJ(MXPATH)
        COMMON/PATH26/ FPOW(MXPATH)
        COMMON/PATH30/ EI(MXPATH)
        COMMON/PATH31/ EJ(MXPATH)
        COMMON/PATH32/ DK(MXPATH)
        COMMON/PATH33/ FD(MXPATH)
        COMMON/PATH34/ FG(MXPATH)
        COMMON/PATH35/ AM(MXTUBE)
        COMMON/PATH40/ AFTH(MXPATH)
        COMMON/PATH41/ FK(MXPATH)
        COMMON/SOLN23/ NZZZZ1,NZZZZ2,NZZZZ3,DTIMUF(MXFMOD)
        COMMON/FSIZ1 / NFM,NTL,NTT,NTJ,NTPL,NTK,NTTB,NTC
        COMMON/FSIZ2 / NUMTNK(MXFMOD)
        COMMON/FSIZ3 / NUMJNC(MXFMOD)
        COMMON/FSIZ4 / NUMPLE(MXFMOD)
        COMMON/FSIZ5 / NUMTUB(MXFMOD)
        COMMON/FSIZ6 / NUMCNT(MXFMOD)
        COMMON/FSIZ7 / NTOTL(MXFMOD)
        COMMON/FSIZ8 / NTOTK(MXFMOD)
        COMMON/FSIZ11/ FLID(MXFMOD)
        INTEGER FLID
        COMMON/FLUCNT/DTSIZF(MXMODF),DTMAXF(MXMODF),OUTPTF(MXMODF),
     . RSSIZF(MXMODF) ,RSMAXF(MXMODF) ,RERRF(MXMODF),
     . REBALF(MXMODF) ,ITROTF(MXMODF) ,OPITRF(MXMODF),
     . DTMINF(MXMODF) ,ITHLDF(MXMODF),
     . DTTUBF(MXMODF) ,RSTUBF(MXMODF)
        COMMON /FLUCN1/ PATMOS,UID,ACCELX,ACCELY,ACCELZ
        DOUBLE PRECISION PATMOS
        INTEGER UID
       COMMON /CNTRL1 /
     +       DTIMEU(MXMODS) , DTIMEI(MXMODS) , DTIMEL(MXMODS)
     +     , DTIMEH(MXMODS) , OUTPUT(MXMODS) , DTMPCC(MXMODS)
     +     , DTMPCA(MXMODS) , NDTMPN(MXMODS) , ITHOLD(MXMODS)
     +     , ATMPCA(MXMODS) , NATMPN(MXMODS) , DRLXCA(MXMODS)
     +     , NDRLXN(MXMODS) , ARLXCA(MXMODS) , ARLXCC(MXMODS)
     +     , NARLXN(MXMODS) , CSGMIN(MXMODS) , CSGFAC(MXMODS)
     +     , CSGMAX(MXMODS) , NCSGMN(MXMODS) , NCGMAN(MXMODS)
     +     , EBALSA(MXMODS) , EBALNA(MXMODS) , EBALSC(MXMODS)
     +     , EBALNC(MXMODS) , NEBALN(MXMODS) , NLOOPT(MXMODS)
     +     , EXTLIM(MXMODS) , ITERXT(MXMODS) , ITEROT(MXMODS)
     +     , BACKUP(MXMODS) , OPEITR(MXMODS) , DRLXCC(MXMODS)
     +     , ATMPCC(MXMODS) , ESUMIS(MXMODS) , ESUMOS(MXMODS)
       INTEGER            OPEITR
C
       COMMON /CNTRL2 /   NDTMPC(MXMODS) , NATMPC(MXMODS)
     +     , NDRLXC(MXMODS) , NARLXC(MXMODS) , NCSGMC(MXMODS)
     +     , NCGMAC(MXMODS) , NEBALC(MXMODS)
       CHARACTER*8        NDTMPC      , NATMPC
     +                  , NDRLXC      , NARLXC      , NCSGMC
     +                  , NCGMAC      , NEBALC
C
       COMMON /NDAT1  /   T(      88)
       COMMON /NDAT2  /   C(      88)
       COMMON /NDAT3  /   Q(      88)
       COMMON /NDAT4  /   NMOD(       4)
       COMMON /NDAT5  /   NSTRT(       4)
       COMMON /NDAT6  /   NMDIF(       4)
       COMMON /NDAT7  /   NMARI(       4)
       COMMON /NDAT8  /   NMHT(       4)
       COMMON /NDAT9  /   NMBD(       4)
       COMMON /NDAT10 /   NDNAM(      88)
       COMMON /NDAT11 /   NDINT(      88)
       COMMON /NDAT12 /   TOLD(      88)
       CHARACTER*8        NMOD    ,NDNAM
        COMMON /TAPES  /   NIN    ,NOUT   ,NCOND  ,NNODE
     +                ,NOSORC ,NOARRY ,NOCARY ,NOTARY
     +                ,NVCD   ,NVGD   ,NOUSER ,NOCNTR
     +                ,NOUSE  ,NETQF  ,NXTRA1 ,NXTRA2
     +                ,NTSV   ,NUSER1 ,NUSER2 ,NRSI
     +                ,NRSO   ,NPARAM ,NFLOW  ,NFLOW2
     +                ,NFLOW3 ,NOOPT  ,NSCR1  ,NSCR2
     +                ,NSCR3  ,NSCR4  ,NQMP   ,NFPROP
       COMMON /CDAT1  /   PT(     168)
       COMMON /CDAT2  /   PG(     168)
       COMMON /CDAT3  /   NLIN(      88)
       COMMON /CDAT4  /   NRAD(      88)
       COMMON /CDAT5  /   NFLO(      13)
       COMMON /CDAT7  /   NCTOT(       4)
       COMMON /CDAT8  /   NGSTRT(       4)
       COMMON /CDAT9  /   G(      84)
       INTEGER            PT      , PG      , NLIN    , NRAD
       INTEGER            NCTOT   , NGSTRT
            COMMON /CCONST /   MMODS  ,NNOD   ,ABSZRO ,SIGMA  ,NMACT
     +                  ,DATE   ,TIMDY  ,LINECT ,PAGECT ,DTIMES
     +                  ,TIMEN  ,TIMEO  ,TIMEM  ,TIMEND ,NLOOPS
     +                  ,LOOPCT ,MLINE
        INTEGER LINECT,PAGECT
        COMMON /NUMCON /   K(       1)
       COMMON /ARAYS  /   A(       1)
       COMMON /CARAYS /   UCA(       1)
       DIMENSION          XK(1)   , NA(1)
       CHARACTER*128 UCA
       EQUIVALENCE (K(1), XK(1))
       EQUIVALENCE (A(1), NA(1))
      COMMON/USER/ ATEST,BTEST,CTEST,DTEST,ETEST,FTEST,GTEST,HTEST,ITEST
     +,JTEST,KTEST,LTEST,MTEST,NTEST,OTEST,PTEST,QTEST,RTEST,STEST,TTEST
     +,UTEST,VTEST,WTEST,XTEST,YTEST,ZTEST,NREC,ITRAN,TINLET,I
       EXTERNAL CTF,CTK,FTC,FTK,FTR,KTC,KTF,RTF
       EXTERNAL TPRINT,QPRINT,CPRINT,GPRINT
       COMMON /SOLTYP/ NSOL
        IF ( ITRAN .EQ. 1 ) THEN
        WRITE ( NUSER1 , 10 ) TIMEN , TL(   104) , TL(   135) ,
     . TL(   166)  ,
     + TL(   168) , TL(   170) , TL(   201) , TL(   203) , TL(   220)
        ELSEIF ( ITRAN .EQ. 2 ) THEN
        WRITE ( NUSER2 , 10 ) TIMEN , FR(   108) , FR(   141) ,
     . FR(   144)  ,
     + FR(   177) , FR(   180) , FR(   213) , FR(   216) , FR(   235)
        ENDIF
10	FORMAT(1X,1PG13.6,8G12.3)
       RETURN
       END
       SUBROUTINE OUT001
       RETURN
       END
       SUBROUTINE OUT002
       RETURN
       END
       SUBROUTINE OUT003
       RETURN
       END
       SUBROUTINE OUT004
       RETURN
       END
       SUBROUTINE OUF002
       RETURN
       END
       SUBROUTINE OUF003
       RETURN
       END
       SUBROUTINE OUF004
       RETURN
       END
       SUBROUTINE OUF005
       RETURN
       END
       SUBROUTINE OUF006
       RETURN
       END
       SUBROUTINE OUF007
       RETURN
       END
       SUBROUTINE OUF008
       RETURN
       END
       SUBROUTINE FLOGI0(MODNO)
       IF(MODNO .EQ. 1)   THEN
                CALL FL0001
       ELSE IF(MODNO .EQ.   2)   THEN
                CALL FL0002
       ELSE IF(MODNO .EQ.   3)   THEN
                CALL FL0003
       ELSE IF(MODNO .EQ.   4)   THEN
                CALL FL0004
       ELSE IF(MODNO .EQ.   5)   THEN
                CALL FL0005
       ELSE IF(MODNO .EQ.   6)   THEN
                CALL FL0006
       ELSE IF(MODNO .EQ.   7)   THEN
                CALL FL0007
       ELSE IF(MODNO .EQ.   8)   THEN
                CALL FL0008
       END IF
       RETURN
       END
       SUBROUTINE FLOGI1(MODNO)
       IF(MODNO .EQ. 1)   THEN
                CALL FL1001
       ELSE IF(MODNO .EQ.   2)   THEN
                CALL FL1002
       ELSE IF(MODNO .EQ.   3)   THEN
                CALL FL1003
       ELSE IF(MODNO .EQ.   4)   THEN
                CALL FL1004
       ELSE IF(MODNO .EQ.   5)   THEN
                CALL FL1005
       ELSE IF(MODNO .EQ.   6)   THEN
                CALL FL1006
       ELSE IF(MODNO .EQ.   7)   THEN
                CALL FL1007
       ELSE IF(MODNO .EQ.   8)   THEN
                CALL FL1008
       END IF
       RETURN
       END
       SUBROUTINE FLOGI2(MODNO)
       IF(MODNO .EQ. 1)   THEN
                CALL FL2001
       ELSE IF(MODNO .EQ.   2)   THEN
                CALL FL2002
       ELSE IF(MODNO .EQ.   3)   THEN
                CALL FL2003
       ELSE IF(MODNO .EQ.   4)   THEN
                CALL FL2004
       ELSE IF(MODNO .EQ.   5)   THEN
                CALL FL2005
       ELSE IF(MODNO .EQ.   6)   THEN
                CALL FL2006
       ELSE IF(MODNO .EQ.   7)   THEN
                CALL FL2007
       ELSE IF(MODNO .EQ.   8)   THEN
                CALL FL2008
       END IF
       RETURN
       END
       SUBROUTINE VARBL0(MODNO)
       IF(MODNO .EQ. 1)   THEN
                CALL VA0001
       ELSE IF(MODNO .EQ.   2)   THEN
                CALL VA0002
       ELSE IF(MODNO .EQ.   3)   THEN
                CALL VA0003
       ELSE IF(MODNO .EQ.   4)   THEN
                CALL VA0004
       END IF
       RETURN
       END
       SUBROUTINE VARBL1(MODNO)
       IF(MODNO .EQ. 1)   THEN
                CALL VA1001
       ELSE IF(MODNO .EQ.   2)   THEN
                CALL VA1002
       ELSE IF(MODNO .EQ.   3)   THEN
                CALL VA1003
       ELSE IF(MODNO .EQ.   4)   THEN
                CALL VA1004
       END IF
       RETURN
       END
       SUBROUTINE VARBL2(MODNO)
       IF(MODNO .EQ. 1)   THEN
                CALL VA2001
       ELSE IF(MODNO .EQ.   2)   THEN
                CALL VA2002
       ELSE IF(MODNO .EQ.   3)   THEN
                CALL VA2003
       ELSE IF(MODNO .EQ.   4)   THEN
                CALL VA2004
       END IF
       RETURN
       END
       SUBROUTINE QVTEMP(MODNAM)
       CHARACTER*(*) MODNAM
       PARAMETER(MXMODS=100)
       COMMON /MODNM1 /   MNAMES(MXMODS)
       COMMON /MODNM2 /   MLLINK(MXMODS)
       COMMON /MODNM3 /   MRLINK(MXMODS)
       COMMON /MODNM4 /   MACT(MXMODS)
       COMMON /MODNM5 /   MROOT
       CHARACTER*8 MNAMES
       INTEGER SERCHN
       MODNO = SERCHN(MODNAM,MROOT,MLLINK,MRLINK,MACT,MNAMES)
       IF(MODNO .EQ. 1)   THEN
                CALL SOR001
       ELSE IF(MODNO .EQ.   2)   THEN
                CALL SOR002
       ELSE IF(MODNO .EQ.   3)   THEN
                CALL SOR003
       ELSE IF(MODNO .EQ.   4)   THEN
                CALL SOR004
       END IF
       RETURN
       END
       SUBROUTINE OUTCAL(MODNO)
       IF(MODNO .EQ. 1)   THEN
                CALL OUT001
       ELSE IF(MODNO .EQ.   2)   THEN
                CALL OUT002
       ELSE IF(MODNO .EQ.   3)   THEN
                CALL OUT003
       ELSE IF(MODNO .EQ.   4)   THEN
                CALL OUT004
       END IF
       IF(MODNO .EQ. -1)   THEN
                CALL OUF001
       ELSE IF(MODNO .EQ.  -2)   THEN
                CALL OUF002
       ELSE IF(MODNO .EQ.  -3)   THEN
                CALL OUF003
       ELSE IF(MODNO .EQ.  -4)   THEN
                CALL OUF004
       ELSE IF(MODNO .EQ.  -5)   THEN
                CALL OUF005
       ELSE IF(MODNO .EQ.  -6)   THEN
                CALL OUF006
       ELSE IF(MODNO .EQ.  -7)   THEN
                CALL OUF007
       ELSE IF(MODNO .EQ.  -8)   THEN
                CALL OUF008
       END IF
       RETURN
       END
